# -*- coding: utf-8 -*-
"""sapel ml .ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_wp3JhoDf9suvsaNra60O10QlZ2UyGSo
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import seaborn as sns
from sklearn.model_selection import train_test_split
import random

df = pd.read_csv('Iris.csv')
df

df.columns

df['Species'].value_counts()

target = df['Species'].replace({'Iris-setosa':0,'Iris-versicolor':1,'Iris-virginica':2})
target

x=df.drop(['Id','Species'],axis=1)
print(x)
y=df['Species']
print(y)

from sklearn.model_selection import train_test_split
trainX,testX,trainY,testY=train_test_split(x,y,test_size=0.2)

from sklearn.preprocessing import StandardScaler
sc=StandardScaler()
scalar=sc.fit(trainX)
trainX_scaled=scalar.transform(trainX)
testX_scaled=scalar.transform(testX)

from sklearn.neural_network import MLPClassifier # Correct the typo in the module name
mlp_clf=MLPClassifier(hidden_layer_sizes=(200),activation='relu',solver='adam',max_iter=100)
mlp_clf.fit(trainX_scaled,trainY)

plt.plot(mlp_clf.loss_curve_)
plt.title('Loss Curve')
plt.xlabel('Iterations')
plt.ylabel('Cost')
plt.show

y_pred = mlp_clf.predict(testX_scaled)
print(y_pred)
from sklearn.metrics import accuracy_score # Correct the module name to 'metrics'
print('Accuracy:',(accuracy_score(testY,y_pred)))